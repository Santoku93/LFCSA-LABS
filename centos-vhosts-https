1. Make sure that your system has Apache Web Server installed. Verify that the server is running, listening for HTTP connections on port 80. Install the appropriate SSL utility/application.

    [root@tcox4 httpd]# ps aux | grep http

    root      6276  0.0  0.7 236484  7164 ?        Ss   16:02   0:00 /usr/sbin/httpd -DFOREGROUND

    apache    6278  0.0  0.3 236616  3556 ?        S    16:02   0:00 /usr/sbin/httpd -DFOREGROUND

    apache    6279  0.0  0.3 236616  3556 ?        S    16:02   0:00 /usr/sbin/httpd -DFOREGROUND

    apache    6280  0.0  0.3 236616  3556 ?        S    16:02   0:00 /usr/sbin/httpd -DFOREGROUND

    apache    6281  0.0  0.3 236616  3556 ?        S    16:02   0:00 /usr/sbin/httpd -DFOREGROUND

    apache    6282  0.0  0.4 236616  4312 ?        S    16:02   0:00 /usr/sbin/httpd -DFOREGROUND

    apache    7299  0.0  0.3 236616  3552 ?        S    16:34   0:00 /usr/sbin/httpd -DFOREGROUND

    root     14519  0.0  0.0 112640   964 pts/0    R+   18:30   0:00 grep --color=auto http

    [root@tcox4 httpd]# telnet localhost 80

    Trying ::1...

    Connected to localhost.

    Escape character is '^]'.

    helo

    501 Not Implemented

    helo to /index.html not supported.

    Connection closed by foreign host.

    [root@tcox4 httpd]# yum install mod_ssl

    (Package installation details here...)

 

2. Move to the appropriate directory and list the available VHOSTS. Create a new VHOST called "XXX.mylabserver.com" where XXX matches the name of your Linux Academy Lab Server as display in your server tab, add the .conf extension to the end of the file. As part of the name, differentiate the HTTPS version of the file so that we can create a separate configuration for HTTP in a later exercise.

    [root@tcox4 httpd]# cd vhost.d

    [root@tcox4 vhost.d]# ll

    total 8

    -rw-r--r--. 1 root root 118 Aug 29 17:22 tcox4.mylabserver.com_http.conf

    -rw-r--r--. 1 root root 228 Aug 29 17:44 tcox4.mylabserver.com_https.conf

     

3. Edit that configuration file so that is contains the appropriate sections and variables for the site path, error and access logs as well as the necessary SSL extensions for our certificate and the server name and any aliases. Display the contents once completed.

 [root@tcox4 vhost.d]# cat tcox4.mylabserver.com_https.conf 

    (VirtualHost *:443 Config Here)

    SSLEngine On

    SSLCertificateFile /etc/httpd/ssl/apache.crt

    SSLCertificateKeyFile /etc/httpd/ssl/apache.key

     

    ServerName tcox4.mylabserver.com

    ServerAlias tcox4

     

    DocumentRoot /var/www/tcox4

 

4. Create a directory to contain your custom VHOST site files. Once created, add the following HTML code to a file in that directory called 'index.html'

  -XXX.MYLABSERVER.COM

  - Please note: replace 'xxx' above with the name of your Linux Academy Lab Server as indicated in the server tab of the site

  - Create a directory called 'ssl' in your /etc/apache2 directory. Create a self signed certificate and key using the openssl utility called apache.key and apache.crt.

     [root@tcox4 vhost.d]# mkdir /var/www/tcox4 && mkdir /etc/httpd/ssl

     [root@tcox4 vhost.d]# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/httpd/ssl/apache.key -out /etc/httpd/ssl/apache.crt

    [root@tcox4 vhost.d]# echo "XXX.MYLABSERVER.COM" >> /var/www/tcox4/index.html

 

5. Execute the appropriate command to enable that new VHOST configuration on the site. Restart the web server. Once restarted, browser (by NAME) to the site and verify that the file created in Step #4 is what appears.

    [root@tcox4 vhost.d]# systemctl restart httpd

    (NOTE: You will have to open a browser and browse to the HTTPS site by NAME to see the new file and certificate message)
